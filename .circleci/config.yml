version: 2.1
jobs:
  build:
    docker:
      - image: buildpack-deps:trusty
    working_directory: ~/ask
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run: docker-compose build
      - run: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - run: 
          command: |
            if [[ $CIRCLE_BRANCH == "master" ]]; then
              docker push chaspy/ask:latest
            fi
  deploy:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - restore_cache:
          key: v1-{{ checksum "requirements.txt" }}
      - run:
          name: Install the AWS CLI
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: v1-{{ checksum "requirements.txt" }}
          paths:
            - venv
      - run: |
          curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee /usr/local/bin/ecs-deploy
          sudo chmod +x /usr/local/bin/ecs-deploy
      - run: |
          . venv/bin/activate
          ecs-deploy -n ask-service -k $AWS_ACCESS_KEY_ID -s $AWS_SECRET_ACCESS_KEY -r $AWS_DEFAULT_REGION -c ask-cluster -i chaspy/ask:latest -t 180

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
#          filters:
#            branches:
#              only: master
